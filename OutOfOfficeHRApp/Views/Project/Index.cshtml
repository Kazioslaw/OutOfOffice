@model IEnumerable<OutOfOfficeHRApp.Models.Project>

@{
    ViewData["Title"] = "Project List";
}

<div class="d-flex justify-content-between align-items-center">
    <h1>Project list</h1>
    <a class="btn btn-primary" asp-controller="Project" asp-action="Create"><i class="bi bi-clipboard-plus"></i></a>
</div>

<table class="table table-striped table-hover table-group-divider align-middle">
    <thead>
        <tr class="col-sm-auto text-center">
            <th class="col-sm-1">#</th>
            <th>
                @Html.DisplayNameFor(model => model.ProjectType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProjectManager)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Comment)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsActive)
            </th>
            <th class="col-sm-1"></th>
        </tr>
    </thead>
    <tbody>
        @{
            int index = 1;
        }
        @foreach (var item in Model)
        {
            <tr class="align-middle">
                @{
                    var comment = item.Comment;

                    const int maxLength = 150;

                    if (comment?.Length > maxLength)
                    {
                        int lastSpace = comment.LastIndexOf(' ', maxLength);
                        if (lastSpace != -1)
                        {
                            comment = comment.Substring(0, lastSpace) + " ...";
                        }
                        else
                        {
                            comment = comment.Substring(0, maxLength) + " ...";
                        }
                    }
                }
                <td class="text-center">
                    @(index++).
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectType.Name)
                </td>
                <td class="text-center">@Html.DisplayFor(modelItem => item.StartDate)</td>
                <td class="text-center">@Html.DisplayFor(modelItem => item.EndDate)</td>
                <td>@Html.DisplayFor(modelItem => item.ProjectManager.FullName)</td>
                <td>
                    @comment
                </td>
                <td clss="text-center">@(item.IsActive ? "Active" : "Inactive")</td>
                <td style="white-space: nowrap;">
                    <div class="d-flex align-items-center">
                        <a asp-action="." asp-route-id="@item.ID" class="btn btn-secondary me-1"><i class="bi bi-file-text"></i></a>
                        <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-outline-primary me-1"><i class="bi bi-pencil"></i></a>
                        @if (item.IsActive)
                        {
                            <form asp-route-id="@item.ID" asp-action="Deactivate" method="post">
                                <button type="submit" class="btn btn-danger me-1">
                                    <i class="bi bi-person-slash"></i>
                                </button>
                            </form>
                        }
                        else
                        {
                            <form asp-route-id="@item.ID" asp-action="Activate" method="post">
                                <button type="submit" class="btn btn-success me-1">
                                    <i class="bi bi-person-check"></i>
                                </button>
                            </form>
                        }
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="Page navigation">
    @if (ViewBag.TotalPages > 1)
    {
        <ul class="pagination justify-content-center">
            <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" aria-label="Previous" href="@Url.Action("GetProjects", new{page = ViewBag.CurrentPage - 1})">&laquo;</a>
            </li>
            <li class="page-item @(1 == ViewBag.CurrentPage ? "active":"")">
                <a class="page-link" href=@Url.Action("GetProjects", new {page = 1})>1</a>
            </li>
            @if (ViewBag.CurrentPage > 3)
            {
                <li class="page-item disabled">
                    <a class="page-link">...</a>
                </li>
            }
            @for (int i = Math.Max(2, ViewBag.CurrentPage - 1); i < Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2); i++)
            {
                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("GetProjects", new { page = i })">@i</a>
                </li>
            }

            @if (ViewBag.CurrentPage < ViewBag.TotalPages - 2)
            {
                <li class="page-item disabled">
                    <a class="page-link">...</a>
                </li>
            }

            <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "active":"")">
                <a class="page-link" href=@Url.Action("GetProjects", new {page = ViewBag.TotalPages})>@(ViewBag.TotalPages)</a>
            </li>


            <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("GetProjects", new { page = ViewBag.CurrentPage + 1 })" aria-label="Next">
                    &raquo;
                </a>
            </li>

        </ul>
    }
</nav>