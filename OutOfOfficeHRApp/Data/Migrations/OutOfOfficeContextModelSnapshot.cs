// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OutOfOfficeHRApp.Data;

#nullable disable

namespace OutOfOfficeHRApp.Data.Migrations
{
    [DbContext(typeof(OutOfOfficeContext))]
    partial class OutOfOfficeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OutOfOfficeHRApp.Models.AbsenceReason", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("AbsenceReason");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Illness"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Family Matter"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Official Matter"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Holiday"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("OutOfOfficeHRApp.Models.ApprovalRequest", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("LeaveRequestID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("LeaveRequestID")
                        .IsUnique();

                    b.ToTable("ApprovalRequest");
                });

            modelBuilder.Entity("OutOfOfficeHRApp.Models.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("OutOfOfficeBalance")
                        .HasColumnType("int");

                    b.Property<int?>("PeoplePartnerID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionID")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectID")
                        .HasColumnType("int");

                    b.Property<int>("SubdivisionID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PeoplePartnerID");

                    b.HasIndex("PositionID");

                    b.HasIndex("ProjectID");

                    b.HasIndex("SubdivisionID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("OutOfOfficeHRApp.Models.LeaveRequest", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AbsenceReasonID")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AbsenceReasonID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("LeaveRequest");
                });

            modelBuilder.Entity("OutOfOfficeHRApp.Models.Position", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Position");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Employee"
                        },
                        new
                        {
                            ID = 2,
                            Name = "HR Manager"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Project Manager"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Administrator"
                        });
                });

            modelBuilder.Entity("OutOfOfficeHRApp.Models.Project", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProjectManagerID")
                        .HasColumnType("int");

                    b.Property<int>("ProjectTypeID")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("ID");

                    b.HasIndex("ProjectManagerID");

                    b.HasIndex("ProjectTypeID");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("OutOfOfficeHRApp.Models.ProjectType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ProjectType");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "CMS"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Mobile E-Commerce"
                        },
                        new
                        {
                            ID = 3,
                            Name = "CRM"
                        },
                        new
                        {
                            ID = 4,
                            Name = "ERP"
                        });
                });

            modelBuilder.Entity("OutOfOfficeHRApp.Models.Subdivision", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Subdivision");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Software Development"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Quality Assurance"
                        },
                        new
                        {
                            ID = 3,
                            Name = "User Experience/User Interface"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Product Management"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Customer Support"
                        },
                        new
                        {
                            ID = 6,
                            Name = "Buissness Analysis"
                        },
                        new
                        {
                            ID = 7,
                            Name = "Information Security"
                        },
                        new
                        {
                            ID = 8,
                            Name = "IT Infractructure"
                        },
                        new
                        {
                            ID = 9,
                            Name = "Data Management"
                        },
                        new
                        {
                            ID = 10,
                            Name = "HR"
                        });
                });

            modelBuilder.Entity("OutOfOfficeHRApp.Models.ApprovalRequest", b =>
                {
                    b.HasOne("OutOfOfficeHRApp.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OutOfOfficeHRApp.Models.LeaveRequest", "LeaveRequest")
                        .WithOne()
                        .HasForeignKey("OutOfOfficeHRApp.Models.ApprovalRequest", "LeaveRequestID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("LeaveRequest");
                });

            modelBuilder.Entity("OutOfOfficeHRApp.Models.Employee", b =>
                {
                    b.HasOne("OutOfOfficeHRApp.Models.Employee", "PeoplePartner")
                        .WithMany()
                        .HasForeignKey("PeoplePartnerID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OutOfOfficeHRApp.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OutOfOfficeHRApp.Models.Project", "Project")
                        .WithMany("Employees")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("OutOfOfficeHRApp.Models.Subdivision", "Subdivision")
                        .WithMany()
                        .HasForeignKey("SubdivisionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PeoplePartner");

                    b.Navigation("Position");

                    b.Navigation("Project");

                    b.Navigation("Subdivision");
                });

            modelBuilder.Entity("OutOfOfficeHRApp.Models.LeaveRequest", b =>
                {
                    b.HasOne("OutOfOfficeHRApp.Models.AbsenceReason", "AbsenceReason")
                        .WithMany()
                        .HasForeignKey("AbsenceReasonID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OutOfOfficeHRApp.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AbsenceReason");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("OutOfOfficeHRApp.Models.Project", b =>
                {
                    b.HasOne("OutOfOfficeHRApp.Models.Employee", "ProjectManager")
                        .WithMany()
                        .HasForeignKey("ProjectManagerID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OutOfOfficeHRApp.Models.ProjectType", "ProjectType")
                        .WithMany()
                        .HasForeignKey("ProjectTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectManager");

                    b.Navigation("ProjectType");
                });

            modelBuilder.Entity("OutOfOfficeHRApp.Models.Project", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
